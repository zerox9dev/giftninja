# --- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from aiogram import F
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏ ---
from services.config import get_valid_config, save_config, format_config_summary, get_target_display
from services.menu import update_menu, config_action_keyboard 
from services.balance import refresh_balance
from services.buy_bot import buy_gift
from middlewares.access_control import show_guest_menu

def register_main_handlers(dp, bot, version):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∏ —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö –∫–æ–º–∞–Ω–¥.
    """

    @dp.message(CommandStart())
    async def command_status_handler(message: Message, state: FSMContext):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
        –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        await state.clear()
        await refresh_balance(bot, user_id=message.from_user.id)
        await update_menu(bot=bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)


    @dp.callback_query(F.data == "main_menu")
    async def start_callback(call: CallbackQuery, state: FSMContext):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é".
        –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        await state.clear()
        await call.answer()
        config = await get_valid_config(call.from_user.id)
        await refresh_balance(call.bot, user_id=call.from_user.id)
        await update_menu(
            bot=call.bot,
            chat_id=call.message.chat.id,
            user_id=call.from_user.id,
            message_id=call.message.message_id
        )


    @dp.callback_query(F.data == "show_help")
    async def help_callback(call: CallbackQuery):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º.
        """
        config = await get_valid_config(call.from_user.id)
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        profile = config["PROFILES"][0]
        target_display = get_target_display(profile, call.from_user.id)
        bot_info = await call.bot.get_me()
        bot_username = bot_info.username
        help_text = (
            f"<b>üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º <code>v{version}</code> :</b>\n\n"
            "<b>üü¢ –í–∫–ª—é—á–∏—Ç—å / üî¥ –í—ã–∫–ª—é—á–∏—Ç—å</b> ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–ª–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–∫—É–ø–∫–∏.\n"
            "<b>‚úèÔ∏è –ü—Ä–æ—Ñ–∏–ª–∏</b> ‚Äî –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤.\n"
            "<b>‚ôªÔ∏è –°–±—Ä–æ—Å–∏—Ç—å</b> ‚Äî –æ–±–Ω—É–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∂–µ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–Ω–æ–≤–∞ —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–æ—Ñ–∏–ª–∏.\n"
            "<b>‚öôÔ∏è –Æ–∑–µ—Ä–±–æ—Ç</b> ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–µ–π Telegram-–∞–∫–∫–∞—É–Ω—Ç–∞.\n"
            "<b>üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å</b> ‚Äî –¥–µ–ø–æ–∑–∏—Ç –∑–≤—ë–∑–¥ –≤ –±–æ—Ç.\n"
            "<b>‚Ü©Ô∏è –í—ã–≤–µ—Å—Ç–∏</b> ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –∑–≤—ë–∑–¥ –ø–æ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∑–≤—ë–∑–¥—ã —Å—Ä–∞–∑—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /withdraw_all.\n"
            "<b>üéè –ö–∞—Ç–∞–ª–æ–≥</b> ‚Äî —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –º–∞—Ä–∫–µ—Ç–µ.\n\n"
            "<b>üìå –ü–æ–¥—Å–∫–∞–∑–∫–∏:</b>\n\n"
            f"‚ùóÔ∏è –ï—Å–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞ ‚Äî –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –æ–Ω –¥–æ–ª–∂–µ–Ω –∑–∞–π—Ç–∏ –≤ —ç—Ç–æ—Ç –±–æ—Ç <code>@{bot_username}</code> –∏ –Ω–∞–∂–∞—Ç—å <code>/start</code>.\n"
            "‚ùóÔ∏è –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞ <b>–∞–∫–∫–∞—É–Ω—Ç</b> ‚Äî –ø–∏—à–∏—Ç–µ <b>id</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–∑–Ω–∞—Ç—å id –º–æ–∂–Ω–æ —Ç—É—Ç @userinfobot).\n"
            "‚ùóÔ∏è –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞ <b>–∫–∞–Ω–∞–ª</b> ‚Äî –ø–∏—à–∏—Ç–µ <b>username</b> –∫–∞–Ω–∞–ª–∞.\n"
            "‚ùóÔ∏è –ï—Å–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è <b>—á–µ—Ä–µ–∑ –Æ–∑–µ—Ä–±–æ—Ç–∞</b>, —É–∫–∞–∑—ã–≤–∞–π—Ç–µ <b>—Ç–æ–ª—å–∫–æ username</b> –ø–æ–ª—É—á–∞—Ç–µ–ª—è ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –∫–∞–Ω–∞–ª.\n"
            "‚ùóÔ∏è –ß—Ç–æ–±—ã –∞–∫–∫–∞—É–Ω—Ç <b>–Æ–∑–µ—Ä–±–æ—Ç–∞</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç, –º–µ–∂–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫–∞.\n"
            f"‚ùóÔ∏è –ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞ —Å –ª—é–±–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞, –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç–æ—Ç –±–æ—Ç <code>@{bot_username}</code> –∏ –Ω–∞–∂–º–∏—Ç–µ <code>/start</code>, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.\n"
            "‚ùóÔ∏è –ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å <b>ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</b> –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–≤—ë–∑–¥?  –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º –∏ —Ç–∞–º –±—É–¥–µ—Ç ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.\n"
            f"‚ùóÔ∏è –•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç? –ö—É–ø–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ üß∏ –∑–∞ ‚òÖ15 c –±–∞–ª–∞–Ω—Å–∞ –±–æ—Ç–∞, –ø–æ–ª—É—á–∞—Ç–µ–ª—å {target_display}.\n\n"
            "<b>üê∏ –ê–≤—Ç–æ—Ä: @zerox9dev</b>\n"
        )
        button = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–¢–µ—Å—Ç? –ö—É–ø–∏—Ç—å üß∏ –∑–∞ ‚òÖ15", callback_data="buy_test_gift")],
            [InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="main_menu")]
        ])
        await call.answer()
        await call.message.answer(help_text, reply_markup=button)

    
    @dp.callback_query(F.data == "show_userbot_help")
    async def userbot_help_callback(call: CallbackQuery):
        help_text = (
            "üîê <b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å api_id –∏ api_hash –¥–ª—è Telegram –∞–∫–∫–∞—É–Ω—Ç–∞:</b>\n\n"
            "‚îå1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç: <a href=\"https://my.telegram.org\">https://my.telegram.org</a>\n"
            "‚îú2Ô∏è‚É£ –í–æ–π–¥–∏—Ç–µ, —É–∫–∞–∑–∞–≤ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∫–æ–¥ –∏–∑ Telegram\n"
            "‚îú3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ: <code>API development tools</code>\n"
            "‚îú4Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ <code>App title</code> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>GiftApp</code>)\n"
            "‚îú5Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ <code>Short name</code> (–ª—é–±–æ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è)\n"
            "‚îî6Ô∏è‚É£ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
            "    ‚îúüî∏ <b>App api_id</b> (—á–∏—Å–ª–æ)\n"
            "    ‚îîüî∏ <b>App api_hash</b> (–Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤)\n\n"
            "üì• –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–≤–æ–¥—è—Ç—Å—è –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —é–∑–µ—Ä–±–æ—Ç–∞.\n\n"
            "üìç <b>–í–∞–∂–Ω–æ:</b> –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è <b>api_id</b> –∏ <b>api_hash</b> –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è "
            "–ø–æ–¥–æ–∂–¥–∞—Ç—å 2‚Äì3 –¥–Ω—è ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Telegram!\n\n"
            "üìç –ù–µ–ª—å–∑—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç –æ—Ç —Ç–æ–≥–æ –∂–µ –∞–∫–∫–∞—É–Ω—Ç–∞, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —ç—Ç–∏–º –±–æ—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —é–∑–µ—Ä–±–æ—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç (—Ç–≤–∏–Ω–∫).\n\n"
            "‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Çe <b>api_id</b> –∏ <b>api_hash</b> –¥—Ä—É–≥–∏–º –ª—é–¥—è–º!"
        )
        button = InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text="‚öôÔ∏è –Æ–∑–µ—Ä–±–æ—Ç", callback_data="userbot_menu"),
            InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="userbot_main_menu")
        ]])
        await call.answer()
        await call.message.answer(help_text, reply_markup=button, disable_web_page_preview=True)


    @dp.callback_query(F.data == "buy_test_gift")
    async def buy_test_gift(call: CallbackQuery):
        """
        –ü–æ–∫—É–ø–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.
        """
        gift_id = '5170233102089322756'
        config = await get_valid_config(call.from_user.id)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        profile = config["PROFILES"][0]
        TARGET_USER_ID = profile["TARGET_USER_ID"]
        TARGET_CHAT_ID = profile["TARGET_CHAT_ID"]
        target_display = get_target_display(profile, call.from_user.id)

        success = await buy_gift(
            bot=call.bot,
            env_user_id=call.from_user.id,
            gift_id=gift_id,
            user_id=TARGET_USER_ID,
            chat_id=TARGET_CHAT_ID,
            gift_price=15,
            file_id=None
        )
        if not success:
            await call.answer()
            await call.message.answer("‚ö†Ô∏è –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–∞—Ä–∫–∞ üß∏ –∑–∞ ‚òÖ15 –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.\n"
                                      "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è!\n"
                                      "üö¶ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ üî¥ (–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω).")
            await update_menu(bot=bot, chat_id=call.message.chat.id, user_id=call.from_user.id, message_id=call.message.message_id)
            return

        await call.answer()
        await call.message.answer(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ üß∏ –∑–∞ ‚òÖ15 –∫—É–ø–ª–µ–Ω. –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {target_display}.")
        await update_menu(bot=bot, chat_id=call.message.chat.id, user_id=call.from_user.id, message_id=call.message.message_id)


    @dp.callback_query(F.data == "reset_bought")
    async def reset_bought_callback(call: CallbackQuery):
        """
        –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ –≤—Å–µ–º –ø—Ä–æ—Ñ–∏–ª—è–º.
        """
        config = await get_valid_config(call.from_user.id)
        # –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏ –≤–æ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª—è—Ö
        for profile in config["PROFILES"]:
            profile["BOUGHT"] = 0
            profile["SPENT"] = 0
            profile["DONE"] = False
        config["ACTIVE"] = False
        await save_config(config, user_id=call.from_user.id)
        info = format_config_summary(config, call.from_user.id)
        try:
            await call.message.edit_text(
                info,
                reply_markup=config_action_keyboard(config["ACTIVE"])
            )
        except TelegramBadRequest as e:
            if "message is not modified" not in str(e):
                raise
        await call.answer("–°—á—ë—Ç—á–∏–∫ –ø–æ–∫—É–ø–æ–∫ —Å–±—Ä–æ—à–µ–Ω.")


    @dp.callback_query(F.data == "toggle_active")
    async def toggle_active_callback(call: CallbackQuery):
        """
        –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: –∞–∫—Ç–∏–≤–µ–Ω/–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.
        """
        config = await get_valid_config(call.from_user.id)
        config["ACTIVE"] = not config.get("ACTIVE", False)
        await save_config(config, user_id=call.from_user.id)
        info = format_config_summary(config, call.from_user.id)
        await call.message.edit_text(
            info,
            reply_markup=config_action_keyboard(config["ACTIVE"])
        )
        await call.answer("–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω")


    @dp.pre_checkout_query()
    async def pre_checkout_handler(pre_checkout_query):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –≤ Telegram Invoice.
        """
        await pre_checkout_query.answer(ok=True)


    @dp.message(F.successful_payment)
    async def process_successful_payment(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ Telegram Invoice.
        """
        await message.answer(
            f'‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω.',
            message_effect_id="5104841245755180586"
        )
        balance = await refresh_balance(bot, user_id=message.from_user.id)
        await update_menu(bot=bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
